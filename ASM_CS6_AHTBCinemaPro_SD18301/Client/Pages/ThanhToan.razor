@inject HttpClient Http
@inject IJSRuntime JS
@inject NavigationManager NavigationManager
@using ASM_CS6_AHTBCinemaPro_SD18301.Models
@using ASM_CS6_AHTBCinemaPro_SD18301.Shared.Models
@using System.Text.Json
@using Newtonsoft.Json
@using Newtonsoft.Json.Serialization

@page "/thanhtoan/{SeatId}/{IdPhim}/{IdCaChieu:int}/{IdGioChieu:int}/{TotalPrice:int}"
@{
}
<style>

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Poppins', sans-serif
    }

    .container {
        margin: 30px auto;
    }

        .container .card {
            width: 100%;
            box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
            background: #fff;
            border-radius: 0px;
        }

    body {
        background: #eee
    }



    .btn.btn-primary {
        background-color: #ddd;
        color: black;
        box-shadow: none;
        border: none;
        font-size: 20px;
        width: 100%;
        height: 100%;
    }

        .btn.btn-primary:focus {
            box-shadow: none;
        }

    .container .card .img-box {
        width: 80px;
        height: 50px;
    }

    .container .card img {
        width: 100%;
        object-fit: fill;
    }

    .container .card .number {
        font-size: 24px;
    }

    .container .card-body .btn.btn-primary .fab.fa-cc-paypal {
        font-size: 32px;
        color: #3333f7;
    }

    .fab.fa-cc-amex {
        color: #1c6acf;
        font-size: 32px;
    }

    .fab.fa-cc-mastercard {
        font-size: 32px;
        color: red;
    }

    .fab.fa-cc-discover {
        font-size: 32px;
        color: orange;
    }

    .c-green {
        color: green;
    }

    .box {
        height: 2000px;
        width: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #ddd;
    }

    .btn.btn-primary.payment {
        background-color: #1c6acf;
        color: white;
        border-radius: 0px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-top: 24px;
    }


    .form__div {
        height: 50px;
        position: relative;
        margin-bottom: 24px;
    }

    .form-control {
        width: 100%;
        height: 45px;
        font-size: 14px;
        border: 1px solid #DADCE0;
        border-radius: 0;
        outline: none;
        padding: 2px;
        background: none;
        z-index: 1;
        box-shadow: none;
    }

    .form__label {
        position: absolute;
        left: 16px;
        top: 10px;
        background-color: #fff;
        color: #80868B;
        font-size: 16px;
        transition: .3s;
        text-transform: uppercase;
    }

    .form-control:focus + .form__label {
        top: -8px;
        left: 12px;
        color: #1A73E8;
        font-size: 12px;
        font-weight: 500;
        z-index: 10;
    }

    .form-control:not(:placeholder-shown).form-control:not(:focus) + .form__label {
        top: -8px;
        left: 12px;
        font-size: 12px;
        font-weight: 500;
        z-index: 10;
    }

    .form-control:focus {
        border: 1.5px solid #1A73E8;
        box-shadow: none;
    }

    img {
        width: 400px;
        height: 300px;
    }

    .message {
        display: none;
        margin-top: 20px;
        padding: 10px;
        border: 1px solid #ccc;
    }

    .btn:disabled {
        background-color: #ccc;
        cursor: not-allowed;
    }
</style>
<body>
    <div class="container">
        <div class="row">
            <div class="col-12 mt-4">
                <div class="card p-3">
                    <p class="mb-0 fw-bold h4">Thông tin thanh toán</p>
                </div>
            </div>
            <div class="col-12">
                <div class="card p-3">
                    <div class="card-body border p-0">
                        <p>

                        </p>
                        <div class="collapse show p-3 pt-0" id="collapseExample">
                            <div class="row">
                                <div class="col-lg-5 mb-lg-0 mb-3">
                                    @if (isLoading)
                                    {
                                        <p>Đang tải...</p>
                                    }
                                    else if (!string.IsNullOrEmpty(errorMessage))
                                    {
                                        <p class="text-danger">@errorMessage</p>
                                    }
                                    else if (multiModel?.Phims != null && multiModel.Phims.Any())
                                    {
                                        @foreach (var phim in multiModel.Phims)
                                        {
                                            <p class="mb-0">
                                                <span class="fw-bold">Tên phim:</span>
                                                <span class="c-green">@phim.TenPhim</span>
                                            </p>

                                            @if (multiModel?.NgayChieus != null && multiModel.NgayChieus.Any())
                                            {
                                                @foreach (var ngayChieu in multiModel.NgayChieus)
                                                {
                                                    <p class="mb-0">
                                                        <span class="fw-bold">Ngày chiếu:</span>
                                                        <span class="c-green">@ngayChieu.NgayChieuPhim.ToString("dd/MM/yyyy")</span>
                                                    </p>

                                                    @if (ngayChieu.GioChieus != null && ngayChieu.GioChieus.Any())
                                                    {
                                                        <p class="mb-0">
                                                            <span class="fw-bold">Giờ chiếu:</span>
                                                            @foreach (var gioChieu in ngayChieu.GioChieus)
                                                            {
                                                                <span class="c-green">
                                                                    @gioChieu.GioBatDau.ToString(@"hh\:mm") - @gioChieu.GioKetThuc.ToString(@"hh\:mm")
                                                                </span>
                                                            }
                                                        </p>
                                                    }
                                                    else
                                                    {
                                                        <p>Không có giờ chiếu cho ngày này</p>
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                <p>Không tìm thấy ngày chiếu</p>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <p>Không tìm thấy thông tin phim</p>
                                    }

                                    <p class="mb-0">
                                        <span class="fw-bold">Tổng giá:</span>
                                        <span class="c-green">@TotalPrice.ToString("N0") VNĐ</span>
                                    </p>
                                </div>

                                <div class="col-lg-7">
                                    <form action="" class="form">
                                        <div class="row">
                                            <div class="col-12">
                                                <div id="paypal-container">
                                                    <div id="paypal-button-container"></div>
                                                </div>
                                            </div>
                                            <div id="message" class="message"></div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
        </div>
    </div>
</body>

@code {
    [Parameter]
    public string SeatId { get; set; }

    [Parameter]
    public string IdPhim { get; set; }

    [Parameter]
    public int IdCaChieu { get; set; }

    [Parameter]
    public int IdGioChieu { get; set; }

    [Parameter]
    public int TotalPrice { get; set; }

    public Phim Movie { get; set; }
    public Multimodel multiModel { get; private set; }
    private string phimTen = string.Empty;
    private bool isLoading = true;
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true; // Bắt đầu quá trình tải dữ liệu

        try
        {
            // Kiểm tra ID ghế và phim
            Console.WriteLine($"ID ghế: {SeatId}, ID phim: {IdPhim}, ID ngày chiếu: {IdCaChieu}");

            // Gọi API để lấy thông tin từ Multimodel
            var response = await Http.GetAsync($"api/ChiTiet/GetChiTiet/{IdPhim}");
            if (response.IsSuccessStatusCode)
            {
                var jsonResponse = await response.Content.ReadAsStringAsync();

                var settings = new JsonSerializerSettings
                    {
                        PreserveReferencesHandling = PreserveReferencesHandling.Objects,
                        Converters = { new CustomTimeSpanConverter() },
                        ContractResolver = new CamelCasePropertyNamesContractResolver()
                    };

                multiModel = JsonConvert.DeserializeObject<Multimodel>(jsonResponse, settings);

                if (multiModel?.Phims != null && multiModel.Phims.Any())
                {
                    Movie = multiModel.Phims.FirstOrDefault();
                    phimTen = Movie?.TenPhim ?? string.Empty;
                }
            }
            else
            {
                errorMessage = "Không thể tải dữ liệu từ máy chủ.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Đã xảy ra lỗi: {ex.Message}";
        }
        finally
        {
            isLoading = false; // Kết thúc quá trình tải dữ liệu
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("initializeCheckout", TotalPrice);
        }
    }
    // private void TogglePayPalButtonVisibility()
    // {

    //     Console.WriteLine("Showing PayPal button");
    //     JS.InvokeVoidAsync("showPayPalButton");
    //     Console.WriteLine("Hiding PayPal button");
    //     JS.InvokeVoidAsync("hidePayPalButton");
    // }
}
